x = scale(t(x))
attr(x, "scaled:center")<-NULL
attr(x, "scaled:scale")<-NULL
x = t(x)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
y<-t(x)%*%w+t(rmvnorm(n=1, mean=rep(0,n), sigma))
for(i in 1:n){ if(y[i]<1e-10){y[i]=-1}else{y[i]=1}}
test<-splmm(x[,1:100],as.numeric(y[1:100]),lambda_0,lambda_1,lambda_2)
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
test$fit()
test$weights()
test$accuracy(x[,101:150],as.numeric(y[101:150]),1e-2,1e-10)
n=200
d=50
k=30
lambda_0=10
lambda_2=0.5
lambda_1= 5
w = c(rep(1,d-k), rep(0,k))
x<-matrix(runif(n*d,-1,1),d,n)
#A=2*matrix(runif(10000),50,200)-1
#sigma_side<- 3*(t(A)%*%A)+0.6*diag(200)+3*matrix(rep(1,40000),200,200)
x = scale(t(x))
attr(x, "scaled:center")<-NULL
attr(x, "scaled:scale")<-NULL
x = t(x)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
y<-t(x)%*%w+t(rmvnorm(n=1, mean=rep(0,n), sigma))
for(i in 1:n){ if(y[i]<1e-10){y[i]=-1}else{y[i]=1}}
test<-splmm(x[,1:100],as.numeric(y[1:100]),lambda_0,lambda_1,lambda_2)
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
test$fit()
test$weights()
test$accuracy(x[,101:150],as.numeric(y[101:150]),1e-2,1e-10)
n=200
d=50
k=30
lambda_0=10
lambda_2=0.5
lambda_1= 5
w = c(rep(1,d-k), rep(0,k))
x<-matrix(runif(n*d,-1,1),d,n)
#A=2*matrix(runif(10000),50,200)-1
#sigma_side<- 3*(t(A)%*%A)+0.6*diag(200)+3*matrix(rep(1,40000),200,200)
x = scale(t(x))
attr(x, "scaled:center")<-NULL
attr(x, "scaled:scale")<-NULL
x = t(x)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
y<-t(x)%*%w+t(rmvnorm(n=1, mean=rep(0,n), sigma))
for(i in 1:n){ if(y[i]<1e-10){y[i]=-1}else{y[i]=1}}
test<-splmm(x[,1:100],as.numeric(y[1:100]),lambda_0,lambda_1,lambda_2)
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
test$fit()
test$weights()
test$accuracy(x[,101:150],as.numeric(y[101:150]),1e-2,1e-10)
x<-runif(3,-1,1)
x
n=200
d=50
k=30
lambda_0=10
lambda_2=0.5
lambda_1= 5
w = c(rep(1,d-k), rep(0,k))
x<-matrix(runif(n*d,-1,1),d,n)
#A=2*matrix(runif(10000),50,200)-1
#sigma_side<- 3*(t(A)%*%A)+0.6*diag(200)+3*matrix(rep(1,40000),200,200)
x = scale(t(x))
attr(x, "scaled:center")<-NULL
attr(x, "scaled:scale")<-NULL
x = t(x)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
y<-t(x)%*%w+t(rmvnorm(n=1, mean=rep(0,n), sigma))
for(i in 1:n){ if(y[i]<1e-10){y[i]=-1}else{y[i]=1}}
test<-splmm(x[,1:100],as.numeric(y[1:100]),lambda_0,lambda_1,lambda_2)
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
test$fit()
library(SPLMM)
test$weights()
test$accuracy(x[,101:150],as.numeric(y[101:150]),1e-2,1e-10)
library(SPLMM)
install.packages("~/SPLMM_1.0_R_x86_64-pc-linux-gnu.tar.gz", repos = NULL, type = "source")
library(SPLMM)
SPLMM test script
library(Matrix)
library(mvtnorm)
lambda_0=10000
lambda_1= 5
lambda_2=3
n=200
d=50
varied_k<-NULL
weightz<-NULL
for(k in 1:50){
w = c(rep(1,d-k), rep(0,k))
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
varied_k <- rbind(varied_k, mean(accura))
}
n=200
d=50
varied_k<-NULL
weightz<-NULL
for(k in 1:50){
w = c(rep(1,d-k), rep(0,k))
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = FALSE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
varied_k <- rbind(varied_k, mean(accura))
}
plot(varied_k
)
library(SPLMM)
k<- 20
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = FALSE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = FALSE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
k<- 30
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = FALSE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
remove.packages(SPLMM)
installed.packages()
remove.packages(SparsePLMM)
remove.packages(SparsePLMM, ‘/home/cavit/R/x86_64-pc-linux-gnu-library/3.4’)
remove.packages(SparsePLMM, "/home/cavit/R/x86_64-pc-linux-gnu-library/3.4")
remove.packages(SparsePLMM, "/home/cavit/R/x86_64-pc-linux-gnu-library/3.4/")
remove.packages(SparsePLMM, "/home/cavit/R/x86_64-pc-linux-gnu-library/3.4")
remove.packages("SparsePLMM", "/home/cavit/R/x86_64-pc-linux-gnu-library/3.4")
installed.packages()
library(SPLMM)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = FALSE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
library(SPLMM)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
library(SPLMM)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
library(SPLMM)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
library(SPLMM)
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
rm(list=ls())
library(Matrix)
library(mvtnorm)
lambda_0=10000
lambda_1= 5
lambda_2=3
n=200
d=50
varied_k<-NULL
weightz<-NULL
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
k=20
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
w = c(rep(1,d-k), rep(0,k))
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
library(SPLMM)
w = c(rep(1,d-k), rep(0,k))
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
library(SPLMM)
w = c(rep(1,d-k), rep(0,k))
accura<-NULL
for(j in 1:50){
xx<-matrix(runif(n*d,-1,1),d,n)
xxx = scale(t(xx))
attr(xxx, "scaled:center")<-NULL
attr(xxx, "scaled:scale")<-NULL
x = t(xxx)
sigma = lambda_1 * diag(n)+ lambda_2*t(x)%*%x
#+t(rmvnorm(n=1, mean=rep(0,n), sigma))
y<-t(x)%*%w
for(i in 1:n){ if(y[i]<1e-10 ){y[i]=-1}else{y[i]=1}}
print("Calibrating sample : "); print(j)
test<-splmm(x,as.numeric(y),lambda_0,lambda_1,lambda_2)
init_w<-test$init_w
init_w_prime<-test$init_w_prime
test$opts(useGrad = TRUE, verbose = TRUE, rho = 2)
#, init_w = test$init_w, init_w_prime=test$init_w_prime)
test$fit()
weightz<-cbind(weights,t(test$weights()))
accura<-rbind(accura,test$accuracy(x,as.numeric(y),1e-2,1e-4))
}
summary(accura)
k
installed.packages()
packrat::init()
library(SPLMM)
